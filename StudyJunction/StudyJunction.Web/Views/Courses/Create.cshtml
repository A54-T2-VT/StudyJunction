@using StudyJunction.Core.ViewModels.Courses
@model CreateCourseViewModel

@{
    ViewData["Title"] = "Create course";
}

<section class="page-section" style="margin-left: 160px; margin-right: 160px; margin-top:30px;">

    <h2 style="margin-left:50px; margin-bottom:30px;">Create a New Post</h2>

    <form asp-controller="Courses" asp-action="Create" method="post" style="max-width: 600px; margin-left: 70px" id="postForm">

        <div class="form-group">
            <label asp-for="Title">Title</label>
            <input type="text" asp-for="Title" class="form-control" maxlength="100" id="titleInput" oninput="updateCounter('titleInput', 'titleCounter', 20, 100)" />
            <div style="margin-top:10px;" id="titleCounter" class="text-muted">Characters: 0/100</div>
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>

        <div class="form-group" style="margin-top: 25px">
            <label asp-for="Description">Description</label>
            <textarea asp-for="Description" class="form-control" style="width: 160%; height: 300px" maxlength="3000" id="contentInput" oninput="updateCounter('contentInput', 'contentCounter', 100, 3000)"></textarea>
            <div style="margin-top:10px;" id="contentCounter" class="text-muted">Characters: 0/3000</div>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>

        <div class="form-group" style="margin-top: 25px">
            <label asp-for="CategoryName">Category</label>
            <input type="text" asp-for="CategoryName" class="form-control" maxlength="100" id="categoryInput" />
        </div>

        <div class="form-group" style="margin-top: 25px">
            <button type="button" value="CourseCreation" class="btn btn-primary" onclick="validateAndSubmit()">Create Course</button>
        </div>


        <script>
            // Function to update character counters
            function updateCounter(inputId, counterId, minChars, maxChars) {
                const input = document.getElementById(inputId);
                const counter = document.getElementById(counterId);
                const currentChars = input.value.length;
                const remainingChars = maxChars - currentChars;

                counter.textContent = `Characters: ${currentChars}/${maxChars}`;

                // Change text color to red if the limit is exceeded or below the minimum length
                if (remainingChars <= 0 || currentChars < minChars) {
                    counter.style.color = 'red';
                } else {
                    counter.style.color = '';
                }
            }

            function validateAndSubmit() {
                // Check minimum length conditions
                const titleInput = document.getElementById('titleInput');
                const contentInput = document.getElementById('contentInput');

                if (titleInput.value.length < 20 || contentInput.value.length < 100) {
                    alert('Minimum length not reached. Please fill in all required fields.');
                    return;
                }

                // If conditions are met, submit the form
                document.getElementById('postForm').submit();
            }
        </script>
    </form>

</section>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
